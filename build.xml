<project name="Build Clojure plugin for IntelliJ IDEA" default="deploy.plugin">
  <!-- Properties file -->  
   <property file="clojure.properties"/>

  <property name="jdk.home" value="${java.home}"/>
  <property name="project.dir" value="."/>
  <property name="src.dir" value="./src"/>
  <property name="project.lib" value="${project.dir}/lib"/>
  <property name="project.dest" value="${project.dir}/out/production/clojure-plugin"/>
  <property name="jps.dest" value="${project.dir}/out/production/clojure-jps-plugin"/>
  <property name="test.dest" value="${project.dir}/out/test/clojure-plugin"/>
  <property name="test.dist" value="${project.dir}/test_dist"/>
  <property name="main.dist" value="${project.dir}/dist"/>
  <property name="idea.home" value="${project.dir}/idea_pack/IntelliJ-IDEA-12-CE.app"/>
  <property name="tools.jar.dir" value="${java.home}/lib"/>

  <path id="tools.path">
    <fileset dir="${tools.jar.dir}">
      <include name="**/*tools.jar"/>
    </fileset>
  </path>

  <property name="0" value="unknown"/>
  <property name="build.vcs.number.clojure_svn" value="unknown"/>
  <property name="plugin.revision" value="${build.vcs.number.clojure_svn}"/>
  <property name="plugin.build.number" value="${build.number}"/>
  <property name="plugin.version" value="${clojure.plugin.version}.${plugin.build.number}"/>

  <path id="jdk.classpath">
    <fileset dir="${java.home}">
      <include name="**/*.jar"/>
    </fileset>
  </path>

  <path id="idea.classpath">
    <fileset dir="${idea.home}/lib">
      <include name="**/*.jar"/>
      <exclude name="boot.jar"/>
    </fileset>
    <fileset dir="${idea.home}/plugins">
      <include name="**/*.jar"/>
    </fileset>
  </path>


  <path id="base.path">
    <path refid="jdk.classpath"/>
    <path refid="idea.classpath"/>
    <path refid="tools.path"/>
    <fileset dir="${project.lib}">
      <include name="clojure.jar"/>
    </fileset>
    <fileset dir="${project.lib}">
      <include name="*.jar"/>
    </fileset>
  </path>

  <path id="clojure.base.path">
    <path refid="jdk.classpath"/>
    <path refid="idea.classpath"/>
    <path refid="tools.path"/>
    <pathelement location="${src.dir}"/>
    <pathelement location="${project.dest}"/>
    <fileset dir="${project.lib}">
      <include name="clojure.jar"/>
    </fileset>
  </path>


  <target name="init">
    <mkdir dir="${project.dest}"/>
  </target>

  <target name="clean" depends="init">
    <delete dir="build" includes="**/*"/>
  </target>

  <target name="make.lexer">
    <java jar="${project.lib}/JFlex.jar" output="jflex.log" fork="true" maxmemory="512m">
      <arg value="--charat"/>
      <arg value="-skel"/>
      <arg value="${project.lib}/idea-flex.skeleton"/>
      <arg value="src/org/jetbrains/plugins/clojure/lexer/clojure.flex"/>
    </java>
  </target>

  <target name="make.java" depends="make.lexer">
    <!-- Read SINCE and UNTIL properties -->
    <!-- loadfile property="idea.build" srcFile="${idea.home}/build.txt" failonerror="true"/-->
    <!--Copy descriptor-->
    <copy todir="${project.dest}/META-INF">
      <fileset dir="${project.dir}/META-INF"/>
    </copy>

    <!--Copy resources-->
    <copy todir="${project.dest}">
      <fileset dir="${project.dir}/resources/"/>
    </copy>

    <!--Copy resource bundle-->
    <copy file="${project.dir}/src/org/jetbrains/plugins/clojure/ClojureBundle.properties"
          tofile="${project.dest}/org/jetbrains/plugins/clojure/ClojureBundle.properties"/>

    <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="idea.classpath"/>

    <mkdir dir="${jps.dest}"/>

    <javac2 srcdir="${project.dir}"
            destdir="${jps.dest}"
            debug="true">
      <classpath>
        <path refid="base.path"/>
      </classpath>
      <include name="jps-plugin/src/**/*.java"/>
    </javac2>

    <copy todir="${jps.dest}/META-INF">
      <fileset dir="${project.dir}/jps-plugin/src/META-INF"/>
    </copy>

    <!--Compile project Java files-->
    <javac2 srcdir="${project.dir}"
            destdir="${project.dest}"
            debug="true">
      <classpath>
        <path refid="base.path"/>
        <path path="${jps.dest}"/>
      </classpath>
      <include name="src/**/*.java"/>
      <include name="src/**/*.form"/>
    </javac2>

  </target>

  <!--<target name="make.clojure" depends="make.java">-->
    <!--&lt;!&ndash; Compile project Clojure files &ndash;&gt;-->
    <!--<java classname="clojure.lang.Compile">-->
      <!--<classpath refid="clojure.base.path"/>-->
      <!--<sysproperty key="clojure.compile.path" value="${project.dest}"/>-->

      <!--&lt;!&ndash; TODO: rework! &ndash;&gt;-->
      <!--<arg value="org.jetbrains.plugins.clojure.refactoring.rename.RenameClojureFileProcessor"/>-->
    <!--</java>-->

  <!--</target>-->

  <target name="make.plugin" depends="make.java">
    <replace file="${project.dest}/META-INF/plugin.xml" token="VERSION" value="${plugin.version}"/>
    <replace file="${project.dest}/META-INF/plugin.xml" token="SINCE_IDEA" value="${idea.build.since}"/>
    <replace file="${project.dest}/META-INF/plugin.xml" token="UNTIL_IDEA" value="${idea.build.until}"/>
  </target>

  <target name="deploy.plugin" depends="clean, make.plugin">

    <mkdir dir="${project.dir}/tempjar/clojure-plugin/lib"/>

    <jar destfile="${project.dir}/tempjar/clojure-plugin/lib/clojure-intellij-plugin.jar">
      <fileset dir="${project.dest}" includes="**/*"/>

      <manifest>
        <attribute name="Revision" value="${plugin.revision}"/>
        <attribute name="Build number" value="${plugin.build.number}"/>
        <attribute name="Build" value="${plugin.version}"/>
      </manifest>
    </jar>

    <jar destfile="${project.dir}/tempjar/clojure-plugin/lib/clojure-jps-plugin.jar">
      <fileset dir="${jps.dest}" includes="**/*"/>
    </jar>

    <copy todir="${project.dir}/tempjar/clojure-plugin/lib">
      <fileset dir="${project.lib}">
        <include name="clojure.jar"/>
      </fileset>
    </copy>

    <mkdir dir="${main.dist}"/>

    <zip destfile="${main.dist}/clojure-intellij-bin-${plugin.version}.zip" basedir="${project.dir}/tempjar"/>
    <delete dir="${project.dir}/tempjar"/>

    <!-- Zip sources-->
    <zip destfile="${main.dist}/clojure-intellij-src-${plugin.version}.zip" basedir="${project.dir}"
         includes="src/**/*.java,
         src/**/*.properties,
         src/**/*.flex,
         src/**/*.jar,
         src/**/*.skeleton,
         src/**/*.form,
         build.xml,
         clojure.properties,
         resources/**/*.png,
         META-INF/**/*.xml,
         lib/**/*,
         test/**/*"
        />
  </target>


  <target name="build.tests" depends="make.plugin">

    <mkdir dir="${test.dest}"/>

    <javac srcdir="${project.dir}/test"
           destdir="${test.dest}"
           debug="true">
      <classpath refid="base.path"/>
      <classpath>
        <path location="${project.dest}"/>
      </classpath>
      <include name="**/*.java"/>
    </javac>

  </target>

  <target name="run.tests" depends="build.tests">

    <mkdir dir="${test.dist}"/>
    <mkdir dir="${project.dir}/logs"/>
    <mkdir dir="${test.dist}/config"/>
    <mkdir dir="${test.dist}/system"/>

    <junit fork="yes"
           dir="${project.dir}"
           showoutput="yes"
           printsummary="yes"
           haltonfailure="no"
           haltonerror="no">

      <classpath>
        <path location="${project.lib}"/>
        <path location="${project.dest}"/>
        <path location="${jps.dest}"/>
        <path location="${test.dest}"/>
        <path refid="base.path"/>
      </classpath>

      <jvmarg value="-Xbootclasspath/p:${project.dir}/lib/boot/boot.jar"/>
      <jvmarg value="-Djava.awt.headless=true"/>
      <jvmarg value="-Xmx256M"/>
      <jvmarg value="-ea"/>
      <jvmarg value="-Djava.compiler=NONE"/>
      <jvmarg value="-Xdebug"/>
      <jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5568"/>

      <jvmarg value="-Didea.config.path=${test.dist}/config"/>
      <jvmarg value="-Didea.system.path=${test.dist}/system"/>
      <jvmarg value="-Didea.plugins.path=${project.dest}"/>

      <jvmarg value="-Didea.load.plugins.id=org.intellij.clojure"/>
      <formatter type="plain"/>

      <batchtest todir="${project.dir}/logs">
        <fileset dir="${test.dest}">
          <include name="**/*Test.class"/>
          <exclude name="**/*ActualTest.class"/>
        </fileset>
      </batchtest>
    </junit>

    <delete dir="${test.dist}"/>
  </target>

</project>
